{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\weather\\\\src\\\\components\\\\WeatherDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Places from \"./Places\";\nimport PostServis from \"./PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [currentPlace, setPlace] = useState(props);\n  const [weatherData, setWeatherData] = useState();\n  useEffect(() => {\n    async function FitchData() {\n      const w = await PostServis.getPlace(props.zip);\n      setWeatherData(w);\n    }\n\n    FitchData();\n  }, []);\n  console.log(weatherData);\n\n  function newPlace(newPlace) {\n    setPlace(newPlace);\n  } // console.log(weatherData);\n  // console.log(weatherData.main);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !weatherData ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Places, {\n        place: currentPlace,\n        newPlace: newPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Displaying weather for city \", currentPlace.place]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0433\\u043E\\u0440\\u043E\\u0434... \", currentPlace.place]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043A\\u043E\\u0434 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430... \", currentPlace.zip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherDisplay, \"w7SSnajDeV5ZA/y6snM1XcUtFQ8=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Places","PostServis","WeatherDisplay","props","currentPlace","setPlace","weatherData","setWeatherData","FitchData","w","getPlace","zip","console","log","newPlace","place","name"],"sources":["E:/REACT/weather/src/components/WeatherDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Places from \"./Places\";\r\nimport PostServis from \"./PostService\";\r\n\r\n\r\nconst WeatherDisplay = (props) => {\r\n  const [currentPlace, setPlace] = useState(props);\r\n  const [weatherData, setWeatherData] = useState();\r\n\r\n  useEffect(() => {\r\n    async function FitchData() {\r\n      const w = await PostServis.getPlace(props.zip)\r\n      setWeatherData(w)\r\n    }\r\n    FitchData()\r\n  }, []);\r\n\r\n  console.log(weatherData);\r\n\r\n\r\n  function newPlace(newPlace) {\r\n    setPlace(newPlace);\r\n  }\r\n\r\n  // console.log(weatherData);\r\n  // console.log(weatherData.main);\r\n\r\n  return (\r\n\r\n    <div>\r\n      {!weatherData ? <h1>Loading</h1> :\r\n        <div>\r\n          <Places place={currentPlace} newPlace={newPlace}></Places>\r\n          <h1>Displaying weather for city {currentPlace.place}</h1>\r\n          <p>текущий город... {currentPlace.place}</p>\r\n          <p>текущий код города... {currentPlace.zip}</p>\r\n          <p>{weatherData.name}</p>\r\n\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDisplay;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAChC,MAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BP,QAAQ,CAACK,KAAD,CAAzC;EACA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;EAEAC,SAAS,CAAC,MAAM;IACd,eAAeS,SAAf,GAA2B;MACzB,MAAMC,CAAC,GAAG,MAAMR,UAAU,CAACS,QAAX,CAAoBP,KAAK,CAACQ,GAA1B,CAAhB;MACAJ,cAAc,CAACE,CAAD,CAAd;IACD;;IACDD,SAAS;EACV,CANQ,EAMN,EANM,CAAT;EAQAI,OAAO,CAACC,GAAR,CAAYP,WAAZ;;EAGA,SAASQ,QAAT,CAAkBA,QAAlB,EAA4B;IAC1BT,QAAQ,CAACS,QAAD,CAAR;EACD,CAjB+B,CAmBhC;EACA;;;EAEA,oBAEE;IAAA,UACG,CAACR,WAAD,gBAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAf,gBACC;MAAA,wBACE,QAAC,MAAD;QAAQ,KAAK,EAAEF,YAAf;QAA6B,QAAQ,EAAEU;MAAvC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,2CAAiCV,YAAY,CAACW,KAA9C;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,4FAAqBX,YAAY,CAACW,KAAlC;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA,qHAA0BX,YAAY,CAACO,GAAvC;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA,UAAIL,WAAW,CAACU;MAAhB;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QAFF;AAeD,CArCD;;GAAMd,c;;KAAAA,c;AAuCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}