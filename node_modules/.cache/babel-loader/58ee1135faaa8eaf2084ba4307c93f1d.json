{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\weather\\\\src\\\\components\\\\WeatherDisplay\\\\WeatherDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Places from \"../Places\";\nimport PostServis from \"../PostService\";\nimport classes from \"./WeatherDisplay.module.css\"; // import \"bootstrap/dist/css/bootstrap.css\";\n// import { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\n\nimport Icon from '../images/arrow_up.png';\nimport Search from \"../Search\";\nimport MyMap from \"../Map/MyMap\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MapTwo from \"../Map/MapTwo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [nowTime, setNowTime] = useState(getTime);\n  const [currentPlace, setPlace] = useState(props);\n  const [currentZip, setcurrentZip] = useState(props.zip);\n  const [weatherData, setWeatherData] = useState();\n  const [position, setPosition] = useState([currentPlace.lat, currentPlace.lon]);\n  console.log();\n  useEffect(() => {\n    setNowTime(getTime);\n    const w = PostServis.getPlace(currentZip).then(data => {\n      setWeatherData(data);\n    });\n  }, [currentZip]);\n\n  function getTime() {\n    let dateNow = new Date();\n    let optionsN = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    };\n    dateNow = dateNow.toLocaleString('en-US', optionsN); // console.log(dateNow.toLocaleString('en-US', optionsN));\n\n    return dateNow;\n  }\n\n  function newPlace(newPlace) {\n    setPlace(newPlace);\n    console.log(newPlace);\n    setcurrentZip(newPlace.zip);\n  }\n\n  function updPosition(data) {\n    setPosition(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.load,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Displaying weather for city \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: /*#__PURE__*/_jsxDEV(\"u\", {\n              children: currentPlace.place\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        newPlace: newPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Places, {\n          place: currentPlace,\n          newPlace: newPlace,\n          updPosition: updPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-sity card border-primary mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: nowTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [weatherData.weather[0].main, \" in \", weatherData.name, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://openweathermap.org/img/w/\" + weatherData.weather[0].icon + \".png\",\n              alt: weatherData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Temp: \", Math.round(weatherData.main.temp), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.flex,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Pressure: \", weatherData.main.pressure, \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Humidity: \", weatherData.main.humidity, \"% (\\u0432\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wind \",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: 50,\n                transform: `rotate(${weatherData.wind.deg}deg)`\n              },\n              src: Icon,\n              alt: \"direct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wind Speed: \", weatherData.wind.speed, \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapTwo, {\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherDisplay, \"OA7wx5N2gkEf/1ULx3C3cCFNNI4=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay; //---------------\n// const [peopleData, setPeopleData] = useState()\n// const getUsers = async () => {\n//   const users = await axios.get('https://randomuser.me/api/?page=1&results=1&nat=us');\n//   setPeopleData(users.data.results);\n// };\n// useEffect(() => {\n//   getUsers();\n// }, []);\n//-------------------\n//https://www.codegrepper.com/code-examples/javascript/async+axios+useeffect\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Places","PostServis","classes","Icon","Search","MyMap","MapContainer","TileLayer","Marker","Popup","MapTwo","WeatherDisplay","props","nowTime","setNowTime","getTime","currentPlace","setPlace","currentZip","setcurrentZip","zip","weatherData","setWeatherData","position","setPosition","lat","lon","console","log","w","getPlace","then","data","dateNow","Date","optionsN","weekday","year","month","day","hour","minute","hour12","toLocaleString","newPlace","updPosition","load","place","weather","main","name","icon","description","Math","round","temp","flex","pressure","humidity","width","transform","wind","deg","speed"],"sources":["E:/REACT/weather/src/components/WeatherDisplay/WeatherDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Places from \"../Places\";\r\nimport PostServis from \"../PostService\";\r\nimport classes from \"./WeatherDisplay.module.css\"\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n// import { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\r\nimport Icon from '../images/arrow_up.png';\r\nimport Search from \"../Search\";\r\nimport MyMap from \"../Map/MyMap\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport MapTwo from \"../Map/MapTwo\";\r\n\r\nconst WeatherDisplay = (props) => {\r\n\r\n  const [nowTime, setNowTime] = useState(getTime);\r\n  const [currentPlace, setPlace] = useState(props);\r\n  const [currentZip, setcurrentZip] = useState(props.zip);\r\n  const [weatherData, setWeatherData] = useState()\r\n\r\n  const [position, setPosition] = useState([currentPlace.lat, currentPlace.lon])\r\n  console.log();\r\n\r\n  useEffect(() => {\r\n    setNowTime(getTime)\r\n    const w = PostServis.getPlace(currentZip).then(data => {\r\n      setWeatherData(data)\r\n    })\r\n  }, [currentZip]);\r\n\r\n  function getTime() {\r\n    let dateNow = new Date();\r\n    let optionsN = {\r\n      weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', hour12: false\r\n    };\r\n    dateNow = dateNow.toLocaleString('en-US', optionsN)\r\n    // console.log(dateNow.toLocaleString('en-US', optionsN));\r\n    return dateNow\r\n  }\r\n\r\n  function newPlace(newPlace) {\r\n    setPlace(newPlace);\r\n    console.log(newPlace);\r\n    setcurrentZip(newPlace.zip)\r\n  }\r\n\r\n  function updPosition(data) {\r\n    setPosition(data)\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      {!weatherData ?\r\n        <div className={classes.load}><h1>Loading......</h1></div> :\r\n        <div>\r\n          <header>\r\n            <h3>Displaying weather for city <i><u>{currentPlace.place}</u></i></h3>\r\n          </header>\r\n          <Search newPlace={newPlace} />\r\n\r\n          <div className=\"container\" >\r\n\r\n            <Places place={currentPlace} newPlace={newPlace} updPosition={updPosition} ></Places>\r\n\r\n\r\n            <div className=\"info-sity card border-primary mb-3\">\r\n              <p>{nowTime}</p>\r\n              <h2>\r\n                {weatherData.weather[0].main} in {weatherData.name}\r\n                {<img src={\"http://openweathermap.org/img/w/\" + weatherData.weather[0].icon + \".png\"} alt={weatherData.description} />}\r\n              </h2>\r\n\r\n              <p>Current Temp: {Math.round(weatherData.main.temp)}°</p>\r\n              <div className={classes.flex}>\r\n                {/* <p>High Temp: {Math.round(weatherData.main.temp_max)}°</p>\r\n                <p>Low Temp: {Math.round(weatherData.main.temp_min)}°</p> */}\r\n                <p>Pressure: {weatherData.main.pressure} hPa</p>\r\n                <p>Humidity: {weatherData.main.humidity}% (влажность)</p>\r\n              </div>\r\n\r\n\r\n              <div className=\"wind \">\r\n                <img style={{ width: 50, transform: `rotate(${weatherData.wind.deg}deg)` }} src={Icon} alt=\"direct\" />\r\n                <p>Wind Speed: {weatherData.wind.speed} m/s</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <MyMap position={position} /> */}\r\n          <MapTwo position={position} />\r\n\r\n        </div>\r\n      }\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default WeatherDisplay;\r\n\r\n\r\n\r\n\r\n//---------------\r\n  // const [peopleData, setPeopleData] = useState()\r\n\r\n  // const getUsers = async () => {\r\n  //   const users = await axios.get('https://randomuser.me/api/?page=1&results=1&nat=us');\r\n  //   setPeopleData(users.data.results);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getUsers();\r\n  // }, []);\r\n  //-------------------\r\n  //https://www.codegrepper.com/code-examples/javascript/async+axios+useeffect\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}