{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\weather\\\\src\\\\components\\\\WeatherDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Places from \"./Places\";\nimport PostServis from \"./PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [currentPlace, setPlace] = useState(props);\n  const [weatherData, setWeatherData] = useState();\n  const w = PostServis.getPlace(props.zip);\n  console.log(w);\n  setWeatherData(w);\n  console.log(weatherData); // setWeatherData(PostServis.getPlace(currentPlace.zip))\n  // console.log(props.data.id);\n  // console.log(props.data.weather);\n\n  function newPlace(newPlace) {\n    setPlace(newPlace);\n  } // console.log(weatherData);\n  // console.log(weatherData.main);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !weatherData ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Places, {\n        place: currentPlace,\n        newPlace: newPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Displaying weather for city \", currentPlace.place]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0433\\u043E\\u0440\\u043E\\u0434... \", currentPlace.place]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043A\\u043E\\u0434 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430... \", currentPlace.zip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherDisplay, \"XTG9WpPCkbTM0JU8Z10Kd+vrvKU=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Places","PostServis","WeatherDisplay","props","currentPlace","setPlace","weatherData","setWeatherData","w","getPlace","zip","console","log","newPlace","place"],"sources":["E:/REACT/weather/src/components/WeatherDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Places from \"./Places\";\r\nimport PostServis from \"./PostService\";\r\n\r\n\r\nconst WeatherDisplay = (props) => {\r\n  const [currentPlace, setPlace] = useState(props);\r\n  const [weatherData, setWeatherData] = useState();\r\n\r\n  const w = PostServis.getPlace(props.zip)\r\n  console.log(w);\r\n  setWeatherData(w)\r\n  console.log(weatherData);\r\n\r\n\r\n  // setWeatherData(PostServis.getPlace(currentPlace.zip))\r\n  // console.log(props.data.id);\r\n  // console.log(props.data.weather);\r\n\r\n  function newPlace(newPlace) {\r\n    setPlace(newPlace);\r\n  }\r\n\r\n\r\n\r\n  // console.log(weatherData);\r\n  // console.log(weatherData.main);\r\n\r\n  return (\r\n\r\n    <div>\r\n      {!weatherData ? <h1>Loading</h1> :\r\n        <div>\r\n          <Places place={currentPlace} newPlace={newPlace}></Places>\r\n          <h1>Displaying weather for city {currentPlace.place}</h1>\r\n          <p>текущий город... {currentPlace.place}</p>\r\n          <p>текущий код города... {currentPlace.zip}</p>\r\n          {/* <p>{JSON.stringify(weatherData)}</p> */}\r\n          {/* <p>Current: {weatherData.main.temp}°</p>\r\n          <p>High: {weatherData.main.temp_max}°</p>\r\n          <p>Low: {weatherData.main.temp_min}°</p>\r\n          <p>Wind Speed: {weatherData.wind.speed} mi/hr</p> */}\r\n\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDisplay;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAChC,MAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BP,QAAQ,CAACK,KAAD,CAAzC;EACA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;EAEA,MAAMU,CAAC,GAAGP,UAAU,CAACQ,QAAX,CAAoBN,KAAK,CAACO,GAA1B,CAAV;EACAC,OAAO,CAACC,GAAR,CAAYJ,CAAZ;EACAD,cAAc,CAACC,CAAD,CAAd;EACAG,OAAO,CAACC,GAAR,CAAYN,WAAZ,EAPgC,CAUhC;EACA;EACA;;EAEA,SAASO,QAAT,CAAkBA,QAAlB,EAA4B;IAC1BR,QAAQ,CAACQ,QAAD,CAAR;EACD,CAhB+B,CAoBhC;EACA;;;EAEA,oBAEE;IAAA,UACG,CAACP,WAAD,gBAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAf,gBACC;MAAA,wBACE,QAAC,MAAD;QAAQ,KAAK,EAAEF,YAAf;QAA6B,QAAQ,EAAES;MAAvC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,2CAAiCT,YAAY,CAACU,KAA9C;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,4FAAqBV,YAAY,CAACU,KAAlC;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA,qHAA0BV,YAAY,CAACM,GAAvC;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QAFF;AAmBD,CA1CD;;GAAMR,c;;KAAAA,c;AA4CN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}