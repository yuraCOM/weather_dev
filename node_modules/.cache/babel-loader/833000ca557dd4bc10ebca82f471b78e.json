{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\weather\\\\src\\\\components\\\\WeatherDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Places from \"./Places\";\nimport PostServis from \"./PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [currentPlace, setPlace] = useState(props);\n  const [weatherData, setWeatherData] = useState();\n\n  function newPlace(newPlace) {\n    setPlace(newPlace);\n  }\n\n  useEffect(() => {\n    const zip = currentPlace.zip;\n    const URL = `https://api.openweathermap.org/data/2.5/weather?id=${zip}&appid=09e9e992228982351890a02e150370a9&units=metric`;\n    fetch(URL).then(res => res.json()).then(json => {\n      setWeatherData(json);\n    }); // const weater = PostServis.getPlace(currentPlace.zip)\n    // weater.then(data => {\n    //   setTimeout(() => {\n    //     setWeatherData(data)\n    //   }, 1000)\n    // })\n  }, []);\n  console.log(weatherData); // console.log(weatherData.main);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !weatherData ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Places, {\n        place: currentPlace,\n        newPlace: newPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Displaying weather for city \", currentPlace.place]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0433\\u043E\\u0440\\u043E\\u0434... \", currentPlace.place]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043A\\u043E\\u0434 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430... \", currentPlace.zip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(weatherData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [weatherData.weather.main, \" in \", weatherData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherDisplay, \"w7SSnajDeV5ZA/y6snM1XcUtFQ8=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Places","PostServis","WeatherDisplay","props","currentPlace","setPlace","weatherData","setWeatherData","newPlace","zip","URL","fetch","then","res","json","console","log","place","JSON","stringify","weather","main"],"sources":["E:/REACT/weather/src/components/WeatherDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Places from \"./Places\";\r\nimport PostServis from \"./PostService\";\r\n\r\n\r\nconst WeatherDisplay = (props) => {\r\n  const [currentPlace, setPlace] = useState(props);\r\n  const [weatherData, setWeatherData] = useState();\r\n\r\n  function newPlace(newPlace) {\r\n    setPlace(newPlace);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const zip = currentPlace.zip;\r\n    const URL = `https://api.openweathermap.org/data/2.5/weather?id=${zip}&appid=09e9e992228982351890a02e150370a9&units=metric`;\r\n\r\n    fetch(URL).then(res => res.json()).then(json => {\r\n      setWeatherData(json);\r\n    });\r\n\r\n    // const weater = PostServis.getPlace(currentPlace.zip)\r\n    // weater.then(data => {\r\n    //   setTimeout(() => {\r\n    //     setWeatherData(data)\r\n\r\n    //   }, 1000)\r\n    // })\r\n\r\n\r\n  }, []);\r\n\r\n  console.log(weatherData);\r\n  // console.log(weatherData.main);\r\n\r\n  return (\r\n\r\n    <div>\r\n      {!weatherData ? <h1>Loading</h1> :\r\n        <div>\r\n          <Places place={currentPlace} newPlace={newPlace}></Places>\r\n          <h1>Displaying weather for city {currentPlace.place}</h1>\r\n          <p>текущий город... {currentPlace.place}</p>\r\n          <p>текущий код города... {currentPlace.zip}</p>\r\n          <p>{JSON.stringify(weatherData)}</p>\r\n          <h1>\r\n            {weatherData.weather.main} in {weatherData}\r\n            {/* <img src={iconUrl} alt={weatherData.description} /> */}\r\n          </h1>\r\n          {/* <p>Current: {weatherData.main.temp}°</p>\r\n          <p>High: {weatherData.main.temp_max}°</p>\r\n          <p>Low: {weatherData.main.temp_min}°</p>\r\n          <p>Wind Speed: {weatherData.wind.speed} mi/hr</p> */}\r\n\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDisplay;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAChC,MAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BP,QAAQ,CAACK,KAAD,CAAzC;EACA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;;EAEA,SAASU,QAAT,CAAkBA,QAAlB,EAA4B;IAC1BH,QAAQ,CAACG,QAAD,CAAR;EACD;;EAEDT,SAAS,CAAC,MAAM;IAEd,MAAMU,GAAG,GAAGL,YAAY,CAACK,GAAzB;IACA,MAAMC,GAAG,GAAI,sDAAqDD,GAAI,sDAAtE;IAEAE,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EAAmCF,IAAnC,CAAwCE,IAAI,IAAI;MAC9CP,cAAc,CAACO,IAAD,CAAd;IACD,CAFD,EALc,CASd;IACA;IACA;IACA;IAEA;IACA;EAGD,CAlBQ,EAkBN,EAlBM,CAAT;EAoBAC,OAAO,CAACC,GAAR,CAAYV,WAAZ,EA5BgC,CA6BhC;;EAEA,oBAEE;IAAA,UACG,CAACA,WAAD,gBAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAf,gBACC;MAAA,wBACE,QAAC,MAAD;QAAQ,KAAK,EAAEF,YAAf;QAA6B,QAAQ,EAAEI;MAAvC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,2CAAiCJ,YAAY,CAACa,KAA9C;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,4FAAqBb,YAAY,CAACa,KAAlC;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA,qHAA0Bb,YAAY,CAACK,GAAvC;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA,UAAIS,IAAI,CAACC,SAAL,CAAeb,WAAf;MAAJ;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAA,WACGA,WAAW,CAACc,OAAZ,CAAoBC,IADvB,UACiCf,WADjC;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QAFF;AAuBD,CAtDD;;GAAMJ,c;;KAAAA,c;AAwDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}