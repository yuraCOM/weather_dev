{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\weather\\\\src\\\\components\\\\Places.jsx\";\nimport React from \"react\"; // let places = [\n//   { name: \"Kyiv\", country: \"UA\", zip: \"703448\", lon: 30.5167, lat: 50.4333 },\n//   { name: \"Kharkiv\", country: \"UA\", zip: \"706483\", lon: 36.25, lat: 50 },\n//   { name: \"Odessa\", country: \"UA\", zip: \"698740\", lon: 30.7326, lat: 46.4775 },\n//   { name: \"Dnipro\", country: \"UA\", zip: \"709930\", lon: 34.9833, lat: 48.45 },\n//   { name: \"Zaporizhia\", country: \"UA\", zip: \"687700\", lon: 35.1833, lat: 47.8167 },\n//   { name: \"Lviv\", country: \"UA\", zip: \"702550\", lon: 24.0232, lat: 49.8383 },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Places = props => {\n  //передаем массив городов/мест и фильтруем по айди\n  const removePlace = (placesArr, eventPlace) => {\n    //фильтр возвращает новый массив отфильтрованный по условию\n    //по сути удалем из массива пост с айди переданным постом\n    // console.log(placesArr.filter((p) => p.zip !== eventPlace.zip));\n    props.setNewPlaces(placesArr.filter(p => p.zip !== eventPlace.zip)); // props.setNewPlaces([])\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sities\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"bt-places\",\n      children: props.places.map((place, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: place.add ? \"addBlock\" : '',\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: event => {\n              props.updPosition([place.lat, place.lon]);\n              props.newPlace({\n                name: place.name,\n                zip: place.zip,\n                country: place.country,\n                lon: place.lon,\n                lat: place.lat\n              }); // const x = () => { MapTwo.tick([place.lat, place.lon]) }\n              // const x = new MapTwo().tick([place.lat, place.lon])\n            },\n            children: place.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), place.add ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delPlace btn btn-danger\",\n            onClick: () => {\n              removePlace(props.places, place); // console.log(props.places.filter((p) => p.zip !== place.zip));\n            },\n            children: \"del\"\n          }, 'del' + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this) : false]\n        }, Math.random() + 'add', true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"names":["React","Places","props","removePlace","placesArr","eventPlace","setNewPlaces","filter","p","zip","places","map","place","index","add","event","updPosition","lat","lon","newPlace","name","country","Math","random"],"sources":["E:/REACT/weather/src/components/Places.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\n// let places = [\r\n//   { name: \"Kyiv\", country: \"UA\", zip: \"703448\", lon: 30.5167, lat: 50.4333 },\r\n//   { name: \"Kharkiv\", country: \"UA\", zip: \"706483\", lon: 36.25, lat: 50 },\r\n//   { name: \"Odessa\", country: \"UA\", zip: \"698740\", lon: 30.7326, lat: 46.4775 },\r\n//   { name: \"Dnipro\", country: \"UA\", zip: \"709930\", lon: 34.9833, lat: 48.45 },\r\n//   { name: \"Zaporizhia\", country: \"UA\", zip: \"687700\", lon: 35.1833, lat: 47.8167 },\r\n//   { name: \"Lviv\", country: \"UA\", zip: \"702550\", lon: 24.0232, lat: 49.8383 },\r\n// ];\r\n\r\n\r\n\r\nconst Places = (props) => {\r\n\r\n  //передаем массив городов/мест и фильтруем по айди\r\n  const removePlace = (placesArr, eventPlace) => {\r\n    //фильтр возвращает новый массив отфильтрованный по условию\r\n    //по сути удалем из массива пост с айди переданным постом\r\n    // console.log(placesArr.filter((p) => p.zip !== eventPlace.zip));\r\n    props.setNewPlaces(placesArr.filter((p) => p.zip !== eventPlace.zip));\r\n    // props.setNewPlaces([])\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"sities\">\r\n      {/* <h3>Select a city</h3> */}\r\n      <nav className=\"bt-places\">\r\n        {props.places.map((place, index) => {\r\n          return (\r\n            <div key={Math.random() + 'add'} className={place.add ? \"addBlock\" : ''}>\r\n              <button className='btn btn-primary'\r\n                key={index}\r\n                onClick={(event) => {\r\n                  props.updPosition([place.lat, place.lon])\r\n                  props.newPlace({ name: place.name, zip: place.zip, country: place.country, lon: place.lon, lat: place.lat });\r\n                  // const x = () => { MapTwo.tick([place.lat, place.lon]) }\r\n                  // const x = new MapTwo().tick([place.lat, place.lon])\r\n                }}\r\n              >\r\n                {place.name}\r\n\r\n              </button>\r\n              {place.add ?\r\n                <button key={'del' + index} className=\"delPlace btn btn-danger\"\r\n                  onClick={() => {\r\n                    removePlace(props.places, place)\r\n                    // console.log(props.places.filter((p) => p.zip !== place.zip));\r\n                  }}>del</button>\r\n                : false}\r\n            </div>\r\n\r\n          );\r\n        })}\r\n      </nav>\r\n      {/* <Search newPlace={props.newPlace} /> */}\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Places;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAExB;EACA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,UAAZ,KAA2B;IAC7C;IACA;IACA;IACAH,KAAK,CAACI,YAAN,CAAmBF,SAAS,CAACG,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,UAAU,CAACI,GAA7C,CAAnB,EAJ6C,CAK7C;EAED,CAPD;;EASA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,uBAEE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGP,KAAK,CAACQ,MAAN,CAAaC,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,KAAkB;QAClC,oBACE;UAAiC,SAAS,EAAED,KAAK,CAACE,GAAN,GAAY,UAAZ,GAAyB,EAArE;UAAA,wBACE;YAAQ,SAAS,EAAC,iBAAlB;YAEE,OAAO,EAAGC,KAAD,IAAW;cAClBb,KAAK,CAACc,WAAN,CAAkB,CAACJ,KAAK,CAACK,GAAP,EAAYL,KAAK,CAACM,GAAlB,CAAlB;cACAhB,KAAK,CAACiB,QAAN,CAAe;gBAAEC,IAAI,EAAER,KAAK,CAACQ,IAAd;gBAAoBX,GAAG,EAAEG,KAAK,CAACH,GAA/B;gBAAoCY,OAAO,EAAET,KAAK,CAACS,OAAnD;gBAA4DH,GAAG,EAAEN,KAAK,CAACM,GAAvE;gBAA4ED,GAAG,EAAEL,KAAK,CAACK;cAAvF,CAAf,EAFkB,CAGlB;cACA;YACD,CAPH;YAAA,UASGL,KAAK,CAACQ;UATT,GACOP,KADP;YAAA;YAAA;YAAA;UAAA,QADF,EAaGD,KAAK,CAACE,GAAN,gBACC;YAA4B,SAAS,EAAC,yBAAtC;YACE,OAAO,EAAE,MAAM;cACbX,WAAW,CAACD,KAAK,CAACQ,MAAP,EAAeE,KAAf,CAAX,CADa,CAEb;YACD,CAJH;YAAA;UAAA,GAAa,QAAQC,KAArB;YAAA;YAAA;YAAA;UAAA,QADD,GAMG,KAnBN;QAAA,GAAUS,IAAI,CAACC,MAAL,KAAgB,KAA1B;UAAA;UAAA;UAAA;QAAA,QADF;MAwBD,CAzBA;IADH;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CA9CD;;KAAMtB,M;AAgDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}