{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\weather\\\\src\\\\components\\\\WeatherDisplay\\\\WeatherDisplay.jsx\",\n    _s = $RefreshSig$();\n\n// @ts-nocheck\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Places from \"../Places\";\nimport PostServis from \"../PostService\";\nimport classes from \"./WeatherDisplay.module.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Icon from '../images/arrow_up.png';\nimport Sunrise from '../images/sunrise.png';\nimport Sunset from '../images/sunset.png';\nimport Search from \"../Search/Search\";\nimport MyMap from \"../Map/MyMap\";\nimport Tools from \"../Tools/Tools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [nowTime, setNowTime] = useState(getTime);\n  const [currentPlace, setCurrentPlace] = useState(props.currentPlace);\n  const [weatherData, setWeatherData] = useState(null);\n  const [sunrise, setSinrise] = useState('');\n  const [sunset, setSunset] = useState('');\n  const [position, setPosition] = useState([]);\n  const [newPlaces, setNewPlaces] = useState([]);\n  const [formKey, setFormKey] = useState('');\n  const extraRef = useRef({\n    isMounted: false\n  });\n  useEffect(() => {\n    setNowTime(getTime);\n    PostServis.getTownFind(currentPlace).then(data => {\n      setWeatherData(data);\n      setPosition([data.coord.lat, data.coord.lon]);\n      setSinrise(Sun(data.sys.sunrise));\n      setSunset(Sun(data.sys.sunset));\n    }); // if (localStorage.getItem(\"newPlaces\")) {\n    //   let newPlaces = localStorage.getItem('newPlaces')\n    //   newPlaces = JSON.parse(newPlaces);\n    //   setNewPlaces(newPlaces)\n    // // }\n\n    setNewPlaces(Tools().getDataLocalStore(\"newPlaces\"));\n  }, []);\n  useEffect(() => {\n    setNowTime(getTime);\n    PostServis.getTownFind(currentPlace).then(data => {\n      setWeatherData(data);\n      setPosition([data.coord.lat, data.coord.lon]);\n      setSinrise(Sun(data.sys.sunrise));\n      setSunset(Sun(data.sys.sunset));\n    });\n  }, [currentPlace]);\n  useEffect(() => {\n    if (extraRef.current.isMounted) {\n      setFormKey(Math.random().toString());\n    } else {\n      extraRef.current.isMounted = true;\n    }\n  }, [position]); // function setLocalStore(name, data) {\n  //   data = JSON.stringify(data);\n  //   localStorage.setItem(name, data);\n  // }\n\n  function getTime() {\n    let dateNow = new Date();\n    let optionsN = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    };\n    dateNow = dateNow.toLocaleString('ru-US', optionsN); // console.log(dateNow.toLocaleString('en-US', optionsN));\n\n    return dateNow;\n  }\n\n  function Sun(unix) {\n    let optionsSun = {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    };\n    let date = new Date(unix * 1000); // @ts-ignore\n\n    date = date.toLocaleString('ru-US', optionsSun); // console.log(date);\n\n    return date;\n  }\n\n  function newPlace(newPlace) {\n    setCurrentPlace(newPlace);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.load,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Search, { ...props,\n        currentPlace: currentPlace,\n        setCurrentPlace: setCurrentPlace,\n        weatherData: weatherData,\n        setPosition: setPosition,\n        newPlaces: newPlaces,\n        setNewPlaces: setNewPlaces,\n        setLocalStore: Tools().setLocalStore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Places, { ...props,\n          currentPlace: currentPlace\n          /*updPosition={updPosition}*/\n          ,\n          setPosition: setPosition,\n          setCurrentPlace: setCurrentPlace,\n          weatherData: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-sity card border-primary mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: nowTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [weatherData.weather[0].main, \" in \", weatherData.name, \", \", weatherData.sys.country, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://openweathermap.org/img/w/\" + weatherData.weather[0].icon + \".png\",\n              alt: weatherData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Temp: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [Math.round(weatherData.main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 32\n            }, this), \" (\", weatherData.weather[0].description, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.flex,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Pressure: \", weatherData.main.pressure, \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Humidity: \", weatherData.main.humidity, \"% (\\u0432\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.wind,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: 35,\n                transform: `rotate(${weatherData.wind.deg}deg)`\n              },\n              src: Icon,\n              alt: \"direct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wind Speed: \", weatherData.wind.speed, \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sun,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Sunrise,\n                alt: \"sunrise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", `Sunrise: ${sunrise}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Sunset,\n                alt: \"sunset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Sunset:\", sunset]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), newPlaces.length === 0 ? '' : /*#__PURE__*/_jsxDEV(Places, { ...props,\n          startPlases: newPlaces,\n          currentPlace: currentPlace,\n          setNewPlaces: setNewPlaces,\n          place: currentPlace,\n          newPlace: newPlace,\n          newPlaces: newPlaces,\n          setLocalStore: Tools.setLocalStore,\n          setCurrentPlace: setCurrentPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MyMap, {\n        position: position\n      }, formKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherDisplay, \"drCjjgK0XU9e4HxrH1t2Z0xdLXA=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay; // let unix = 1654712956;\n// let date = new Date(unix * 1000);\n// console.log(date);   // 2017-10-08T14:35:44.000Z\n// let places = [\n//   { name: \"Kyiv\", country: \"UA\", zip: \"703448\", lon: 30.5167, lat: 50.4333 },\n//   { name: \"Kharkiv\", country: \"UA\", zip: \"706483\", lon: 36.25, lat: 50 },\n//   { name: \"Odessa\", country: \"UA\", zip: \"698740\", lon: 30.7326, lat: 46.4775 },\n//   { name: \"Dnipro\", country: \"UA\", zip: \"709930\", lon: 34.9833, lat: 48.45 },\n//   { name: \"Zaporizhia\", country: \"UA\", zip: \"687700\", lon: 35.1833, lat: 47.8167 },\n//   { name: \"Lviv\", country: \"UA\", zip: \"702550\", lon: 24.0232, lat: 49.8383 },\n// ];\n//---------------\n// const [peopleData, setPeopleData] = useState()\n// const getUsers = async () => {\n//   const users = await axios.get('https://randomuser.me/api/?page=1&results=1&nat=us');\n//   setPeopleData(users.data.results);\n// };\n// useEffect(() => {\n//   getUsers();\n// }, []);\n//-------------------\n//https://www.codegrepper.com/code-examples/javascript/async+axios+useeffect\n// let places = [\n//   { name: \"Kyiv\", country: \"UA\", zip: \"703448\", },\n//   { name: \"Kharkiv\", country: \"UA\", zip: \"706483\", },\n//   { name: \"Odessa\", country: \"UA\", zip: \"698740\", },\n//   { name: \"Dnipro\", country: \"UA\", zip: \"709930\", },\n//   { name: \"Zaporizhia\", country: \"UA\", zip: \"687700\", },\n//   { name: \"Lviv\", country: \"UA\", zip: \"702550\", },\n// ];\n// const [newPlaces, setNewPlaces] = useState(\n//   [\n//     { name: \"MARS\", country: \"UA\", zip: \"702550\", lon: 24.0232, lat: 49.8383, add: true },\n//     { name: \"MOON\", country: \"UA\", zip: \"687700\", lon: 24.0232, lat: 49.8383, add: true }\n//   ])\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Places","PostServis","classes","Icon","Sunrise","Sunset","Search","MyMap","Tools","WeatherDisplay","props","nowTime","setNowTime","getTime","currentPlace","setCurrentPlace","weatherData","setWeatherData","sunrise","setSinrise","sunset","setSunset","position","setPosition","newPlaces","setNewPlaces","formKey","setFormKey","extraRef","isMounted","getTownFind","then","data","coord","lat","lon","Sun","sys","getDataLocalStore","current","Math","random","toString","dateNow","Date","optionsN","weekday","year","month","day","hour","minute","hour12","toLocaleString","unix","optionsSun","date","newPlace","load","setLocalStore","weather","main","name","country","icon","description","round","temp","flex","pressure","humidity","wind","width","transform","deg","speed","sun","length"],"sources":["E:/REACT/weather/src/components/WeatherDisplay/WeatherDisplay.jsx"],"sourcesContent":["// @ts-nocheck\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Places from \"../Places\";\nimport PostServis from \"../PostService\";\nimport classes from \"./WeatherDisplay.module.css\"\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Icon from '../images/arrow_up.png';\nimport Sunrise from '../images/sunrise.png'\nimport Sunset from '../images/sunset.png'\nimport Search from \"../Search/Search\";\nimport MyMap from \"../Map/MyMap\";\nimport Tools from \"../Tools/Tools\";\n\n\nconst WeatherDisplay = (props) => {\n\n  const [nowTime, setNowTime] = useState(getTime);\n  const [currentPlace, setCurrentPlace] = useState(props.currentPlace);\n  const [weatherData, setWeatherData] = useState(null)\n  const [sunrise, setSinrise] = useState('')\n  const [sunset, setSunset] = useState('')\n  const [position, setPosition] = useState([])\n\n  const [newPlaces, setNewPlaces] = useState([])\n\n  const [formKey, setFormKey] = useState('');\n\n  const extraRef = useRef({\n    isMounted: false,\n  });\n\n  useEffect(() => {\n    setNowTime(getTime)\n    PostServis.getTownFind(currentPlace).then((data) => {\n      setWeatherData(data)\n      setPosition([data.coord.lat, data.coord.lon])\n      setSinrise(Sun(data.sys.sunrise))\n      setSunset(Sun(data.sys.sunset))\n    })\n\n    // if (localStorage.getItem(\"newPlaces\")) {\n    //   let newPlaces = localStorage.getItem('newPlaces')\n    //   newPlaces = JSON.parse(newPlaces);\n    //   setNewPlaces(newPlaces)\n    // // }\n    setNewPlaces(Tools().getDataLocalStore(\"newPlaces\"))\n\n  }, []);\n\n  useEffect(() => {\n    setNowTime(getTime)\n    PostServis.getTownFind(currentPlace).then((data) => {\n      setWeatherData(data)\n      setPosition([data.coord.lat, data.coord.lon])\n      setSinrise(Sun(data.sys.sunrise))\n      setSunset(Sun(data.sys.sunset))\n    })\n  }, [currentPlace]);\n\n\n  useEffect(() => {\n    if (extraRef.current.isMounted) {\n      setFormKey(Math.random().toString());\n    } else {\n      extraRef.current.isMounted = true;\n    }\n  }, [position]);\n\n  // function setLocalStore(name, data) {\n  //   data = JSON.stringify(data);\n  //   localStorage.setItem(name, data);\n  // }\n\n\n  function getTime() {\n    let dateNow = new Date();\n    let optionsN = {\n      weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', hour12: false\n    };\n    dateNow = dateNow.toLocaleString('ru-US', optionsN)\n    // console.log(dateNow.toLocaleString('en-US', optionsN));\n    return dateNow\n  }\n\n  function Sun(unix) {\n    let optionsSun = {\n      hour: '2-digit', minute: '2-digit', hour12: false\n    };\n    let date = new Date(unix * 1000);\n    // @ts-ignore\n    date = date.toLocaleString('ru-US', optionsSun)\n    // console.log(date);\n    return date\n  }\n\n  function newPlace(newPlace) {\n    setCurrentPlace(newPlace);\n  }\n\n  return (\n\n    <div>\n      {!weatherData ?\n        <div className={classes.load}><h1>Loading......</h1></div> :\n        <div className=\"row\">\n          <Search  {...props}\n            currentPlace={currentPlace}\n            setCurrentPlace={setCurrentPlace}\n            weatherData={weatherData}\n            setPosition={setPosition}\n            newPlaces={newPlaces}\n            setNewPlaces={setNewPlaces}\n            setLocalStore={Tools().setLocalStore} />\n\n          <div className=\"container\" >\n\n            <Places  {...props}\n              currentPlace={currentPlace} /*updPosition={updPosition}*/\n              setPosition={setPosition}\n              setCurrentPlace={setCurrentPlace}\n              weatherData={weatherData}\n            >\n            </Places>\n\n            <div className=\"info-sity card border-primary mb-3\">\n              <p>{nowTime}</p>\n              <h5>\n                {weatherData.weather[0].main} in {weatherData.name}, {weatherData.sys.country}\n                {<img src={\"http://openweathermap.org/img/w/\" + weatherData.weather[0].icon + \".png\"} alt={weatherData.description} />}\n              </h5>\n\n              <p>Current Temp: <strong>{Math.round(weatherData.main.temp)}°</strong> ({weatherData.weather[0].description})\n              </p>\n              <div className={classes.flex}>\n                <p>Pressure: {weatherData.main.pressure} hPa</p>\n                <p>Humidity: {weatherData.main.humidity}% (влажность)</p>\n              </div>\n\n              <div className={classes.wind}>\n                <img style={{ width: 35, transform: `rotate(${weatherData.wind.deg}deg)` }} src={Icon} alt=\"direct\" />\n                <p>Wind Speed: {weatherData.wind.speed} m/s</p>\n              </div>\n\n              <div className={classes.sun}>\n                <div><img src={Sunrise} alt=\"sunrise\" /><p> {`Sunrise: ${sunrise}`}</p></div>\n                <div><img src={Sunset} alt=\"sunset\" /><p>Sunset:{sunset}</p></div>\n              </div>\n            </div>\n\n            {newPlaces.length === 0 ? '' :\n              <Places {...props} startPlases={newPlaces} currentPlace={currentPlace}\n                setNewPlaces={setNewPlaces} place={currentPlace} newPlace={newPlace}\n                newPlaces={newPlaces}\n                setLocalStore={Tools.setLocalStore}\n                setCurrentPlace={setCurrentPlace}>\n              </Places>}\n\n          </div>\n          <MyMap key={formKey} position={position} />\n        </div>\n      }\n    </div >\n  );\n};\n\nexport default WeatherDisplay;\n\n\n\n\n\n\n\n  // let unix = 1654712956;\n  // let date = new Date(unix * 1000);\n  // console.log(date);   // 2017-10-08T14:35:44.000Z\n\n\n\n\n  // let places = [\n  //   { name: \"Kyiv\", country: \"UA\", zip: \"703448\", lon: 30.5167, lat: 50.4333 },\n  //   { name: \"Kharkiv\", country: \"UA\", zip: \"706483\", lon: 36.25, lat: 50 },\n  //   { name: \"Odessa\", country: \"UA\", zip: \"698740\", lon: 30.7326, lat: 46.4775 },\n  //   { name: \"Dnipro\", country: \"UA\", zip: \"709930\", lon: 34.9833, lat: 48.45 },\n  //   { name: \"Zaporizhia\", country: \"UA\", zip: \"687700\", lon: 35.1833, lat: 47.8167 },\n  //   { name: \"Lviv\", country: \"UA\", zip: \"702550\", lon: 24.0232, lat: 49.8383 },\n  // ];\n\n\n  //---------------\n  // const [peopleData, setPeopleData] = useState()\n\n  // const getUsers = async () => {\n  //   const users = await axios.get('https://randomuser.me/api/?page=1&results=1&nat=us');\n  //   setPeopleData(users.data.results);\n  // };\n\n  // useEffect(() => {\n  //   getUsers();\n  // }, []);\n  //-------------------\n  //https://www.codegrepper.com/code-examples/javascript/async+axios+useeffect\n\n\n  // let places = [\n  //   { name: \"Kyiv\", country: \"UA\", zip: \"703448\", },\n  //   { name: \"Kharkiv\", country: \"UA\", zip: \"706483\", },\n  //   { name: \"Odessa\", country: \"UA\", zip: \"698740\", },\n  //   { name: \"Dnipro\", country: \"UA\", zip: \"709930\", },\n  //   { name: \"Zaporizhia\", country: \"UA\", zip: \"687700\", },\n  //   { name: \"Lviv\", country: \"UA\", zip: \"702550\", },\n  // ];\n\n  // const [newPlaces, setNewPlaces] = useState(\n  //   [\n  //     { name: \"MARS\", country: \"UA\", zip: \"702550\", lon: 24.0232, lat: 49.8383, add: true },\n  //     { name: \"MOON\", country: \"UA\", zip: \"687700\", lon: 24.0232, lat: 49.8383, add: true }\n  //   ])"],"mappings":"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"},"metadata":{},"sourceType":"module"}