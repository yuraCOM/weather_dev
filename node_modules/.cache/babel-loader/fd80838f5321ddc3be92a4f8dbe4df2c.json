{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\weather\\\\src\\\\components\\\\WeatherDisplay\\\\WeatherDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Places from \"../Places\";\nimport PostServis from \"../PostService\";\nimport classes from \"./WeatherDisplay.module.css\"; // import \"bootstrap/dist/css/bootstrap.css\";\n// import { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\n// import Icon from './icons8.png';\n\nimport Icon from '../images/arrow_up.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [nowTime, setNowTime] = useState(getTime);\n  const [currentPlace, setPlace] = useState(props);\n  const [currentZip, setcurrentZip] = useState(props.zip);\n  const [weatherData, setWeatherData] = useState('');\n  PostServis.getPlace(currentZip).then(data => {\n    console.log(data);\n    setWeatherData(data.data);\n  }); // console.log(PostServis.getPlace(currentZip));\n  // const w = PostServis.getPlace(currentZip)\n  // setWeatherData(w)\n\n  console.log('weatherData', weatherData); // console.log(PostServis.getTownFind('Херсон'));\n\n  useEffect(() => {\n    setNowTime(getTime); // async function FitchDataZip() {\n    //   const w = await PostServis.getPlace(currentZip)\n    //   setWeatherData(w)\n    // }\n    // FitchDataZip()\n  }, [currentZip]);\n\n  function getTime() {\n    let dateNow = new Date();\n    let optionsN = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    };\n    dateNow = dateNow.toLocaleString('en-US', optionsN); // console.log(dateNow.toLocaleString('en-US', optionsN));\n\n    return dateNow;\n  }\n\n  function newPlace(newPlace) {\n    setPlace(newPlace);\n    setcurrentZip(newPlace.zip);\n    console.log(newPlace);\n  } // const weather = weatherData.weather[0]\n  // console.log(weather)\n  // const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !weatherData ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Displaying weather for city \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: currentPlace.place\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Places, {\n          place: currentPlace,\n          newPlace: newPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-sity\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: nowTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [weatherData.weather[0].main, \" in \", weatherData.name, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://openweathermap.org/img/w/\" + weatherData.weather[0].icon + \".png\",\n              alt: weatherData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Temp: \", Math.round(weatherData.main.temp), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.flex,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"High Temp: \", Math.round(weatherData.main.temp_max), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Low Temp: \", Math.round(weatherData.main.temp_min), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wind \",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: 50,\n                transform: `rotate(${weatherData.wind.deg}deg)`\n              },\n              src: Icon,\n              alt: \"direct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wind Speed: \", weatherData.wind.speed, \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0433\\u043E\\u0440\\u043E\\u0434... \", currentPlace.place]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043A\\u043E\\u0434 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430... \", currentPlace.zip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherData.base\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherDisplay, \"YB5grte05VE/CfreF00ujKUUg1k=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Places","PostServis","classes","Icon","WeatherDisplay","props","nowTime","setNowTime","getTime","currentPlace","setPlace","currentZip","setcurrentZip","zip","weatherData","setWeatherData","getPlace","then","data","console","log","dateNow","Date","optionsN","weekday","year","month","day","hour","minute","hour12","toLocaleString","newPlace","place","weather","main","name","icon","description","Math","round","temp","flex","temp_max","temp_min","width","transform","wind","deg","speed","base"],"sources":["E:/REACT/weather/src/components/WeatherDisplay/WeatherDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Places from \"../Places\";\r\nimport PostServis from \"../PostService\";\r\nimport classes from \"./WeatherDisplay.module.css\"\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n// import { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\r\n// import Icon from './icons8.png';\r\nimport Icon from '../images/arrow_up.png';\r\n\r\nconst WeatherDisplay = (props) => {\r\n\r\n  const [nowTime, setNowTime] = useState(getTime);\r\n  const [currentPlace, setPlace] = useState(props);\r\n  const [currentZip, setcurrentZip] = useState(props.zip);\r\n\r\n  const [weatherData, setWeatherData] = useState('')\r\n  PostServis.getPlace(currentZip).then(data => {\r\n    console.log(data);\r\n    setWeatherData(data.data)\r\n  })\r\n\r\n\r\n\r\n  // console.log(PostServis.getPlace(currentZip));\r\n  // const w = PostServis.getPlace(currentZip)\r\n  // setWeatherData(w)\r\n  console.log('weatherData', weatherData);\r\n\r\n\r\n  // console.log(PostServis.getTownFind('Херсон'));\r\n\r\n  useEffect(() => {\r\n    setNowTime(getTime)\r\n    // async function FitchDataZip() {\r\n    //   const w = await PostServis.getPlace(currentZip)\r\n    //   setWeatherData(w)\r\n    // }\r\n    // FitchDataZip()\r\n\r\n  }, [currentZip]);\r\n\r\n\r\n\r\n  function getTime() {\r\n\r\n    let dateNow = new Date();\r\n    let optionsN = {\r\n      weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', hour12: false\r\n    };\r\n    dateNow = dateNow.toLocaleString('en-US', optionsN)\r\n    // console.log(dateNow.toLocaleString('en-US', optionsN));\r\n    return dateNow\r\n  }\r\n\r\n\r\n  function newPlace(newPlace) {\r\n    setPlace(newPlace);\r\n    setcurrentZip(newPlace.zip)\r\n    console.log(newPlace);\r\n  }\r\n\r\n\r\n  // const weather = weatherData.weather[0]\r\n  // console.log(weather)\r\n  // const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\r\n\r\n  return (\r\n\r\n    <div>\r\n      {!weatherData ? <h1>Loading</h1> :\r\n        <div>\r\n          <header>\r\n            <h1>Displaying weather for city <strong>{currentPlace.place}</strong></h1>\r\n          </header>\r\n\r\n          <div className=\"container\">\r\n            <Places place={currentPlace} newPlace={newPlace}></Places>\r\n            <div className=\"info-sity\">\r\n              <p>{nowTime}</p>\r\n              <h1>\r\n                {weatherData.weather[0].main} in {weatherData.name}\r\n                {<img src={\"http://openweathermap.org/img/w/\" + weatherData.weather[0].icon + \".png\"} alt={weatherData.description} />}\r\n              </h1>\r\n\r\n              <p>Current Temp: {Math.round(weatherData.main.temp)}°</p>\r\n              <div className={classes.flex}>\r\n                <p>High Temp: {Math.round(weatherData.main.temp_max)}°</p>\r\n                <p>Low Temp: {Math.round(weatherData.main.temp_min)}°</p>\r\n              </div>\r\n\r\n\r\n              <div className=\"wind \">\r\n                <img style={{ width: 50, transform: `rotate(${weatherData.wind.deg}deg)` }} src={Icon} alt=\"direct\" />\r\n                <p>Wind Speed: {weatherData.wind.speed} m/s</p>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <hr />\r\n          <p>текущий город... {currentPlace.place}</p>\r\n          <p>текущий код города... {currentPlace.zip}</p>\r\n          <p>{weatherData.name}</p>\r\n          <p>{weatherData.base}</p>\r\n\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDisplay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}