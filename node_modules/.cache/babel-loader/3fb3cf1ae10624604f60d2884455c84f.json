{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\weather\\\\src\\\\components\\\\WeatherDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Places from \"./Places\";\nimport PostServis from \"./PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [currentPlace, setPlace] = useState(props);\n  const [weatherData, setWeatherData] = useState();\n  useEffect(() => {\n    const w = PostServis.getPlace(props.zip);\n    w.then(data => {\n      setWeatherData(data);\n    });\n\n    function newPlace(newPlace) {\n      setPlace(newPlace);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !weatherData ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Places, {\n          place: currentPlace,\n          newPlace: newPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Displaying weather for city \", currentPlace.place]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0433\\u043E\\u0440\\u043E\\u0434... \", currentPlace.place]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043A\\u043E\\u0434 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430... \", currentPlace.zip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weatherData.data.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }, []);\n  console.log(weatherData);\n};\n\n_s(WeatherDisplay, \"w7SSnajDeV5ZA/y6snM1XcUtFQ8=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Places","PostServis","WeatherDisplay","props","currentPlace","setPlace","weatherData","setWeatherData","w","getPlace","zip","then","data","newPlace","place","id","console","log"],"sources":["E:/REACT/weather/src/components/WeatherDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Places from \"./Places\";\r\nimport PostServis from \"./PostService\";\r\n\r\n\r\nconst WeatherDisplay = (props) => {\r\n  const [currentPlace, setPlace] = useState(props);\r\n  const [weatherData, setWeatherData] = useState();\r\n\r\n  useEffect(() => {\r\n    const w = PostServis.getPlace(props.zip)\r\n    w.then((data) => {\r\n      setWeatherData(data)\r\n    })\r\n\r\n    function newPlace(newPlace) {\r\n      setPlace(newPlace);\r\n    }\r\n\r\n    return (\r\n\r\n      <div>\r\n        {!weatherData ? <h1>Loading</h1> :\r\n          <div>\r\n            <Places place={currentPlace} newPlace={newPlace}></Places>\r\n            <h1>Displaying weather for city {currentPlace.place}</h1>\r\n            <p>текущий город... {currentPlace.place}</p>\r\n            <p>текущий код города... {currentPlace.zip}</p>\r\n            <p>{weatherData.data.id}</p>\r\n\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n\r\n\r\n  }, []);\r\n\r\n  console.log(weatherData);\r\n\r\n\r\n};\r\n\r\nexport default WeatherDisplay;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAChC,MAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BP,QAAQ,CAACK,KAAD,CAAzC;EACA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMS,CAAC,GAAGP,UAAU,CAACQ,QAAX,CAAoBN,KAAK,CAACO,GAA1B,CAAV;IACAF,CAAC,CAACG,IAAF,CAAQC,IAAD,IAAU;MACfL,cAAc,CAACK,IAAD,CAAd;IACD,CAFD;;IAIA,SAASC,QAAT,CAAkBA,QAAlB,EAA4B;MAC1BR,QAAQ,CAACQ,QAAD,CAAR;IACD;;IAED,oBAEE;MAAA,UACG,CAACP,WAAD,gBAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAf,gBACC;QAAA,wBACE,QAAC,MAAD;UAAQ,KAAK,EAAEF,YAAf;UAA6B,QAAQ,EAAES;QAAvC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,2CAAiCT,YAAY,CAACU,KAA9C;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,4FAAqBV,YAAY,CAACU,KAAlC;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAA,qHAA0BV,YAAY,CAACM,GAAvC;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA,UAAIJ,WAAW,CAACM,IAAZ,CAAiBG;QAArB;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QAFF;EAiBD,CA3BQ,EA2BN,EA3BM,CAAT;EA6BAC,OAAO,CAACC,GAAR,CAAYX,WAAZ;AAGD,CApCD;;GAAMJ,c;;KAAAA,c;AAsCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}